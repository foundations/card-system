<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class System extends Controller { private function set(Request $spceaf29, $sp456fda) { foreach ($sp456fda as $sp3d006c) { if ($spceaf29->has($sp3d006c)) { \App\System::_set($sp3d006c, $spceaf29->post($sp3d006c)); } } } private function setMoney(Request $spceaf29, $sp456fda) { foreach ($sp456fda as $sp3d006c) { if ($spceaf29->has($sp3d006c)) { \App\System::_set($sp3d006c, intval($spceaf29->post($sp3d006c) * 100)); } } } private function setInt(Request $spceaf29, $sp456fda) { foreach ($sp456fda as $sp3d006c) { if ($spceaf29->has($sp3d006c)) { \App\System::_set($sp3d006c, (int) $spceaf29->post($sp3d006c)); } } } function setItem(Request $spceaf29) { $sp3d006c = $spceaf29->post('name'); $sp4d089d = $spceaf29->post('value'); if (!$sp3d006c || !$sp4d089d) { return Response::forbidden(); } \App\System::_set($sp3d006c, $sp4d089d); return Response::success(); } function info(Request $spceaf29) { $spe36769 = array('app_name', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_bkg', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp4d3e4d = array('shop_inventory'); if ($spceaf29->isMethod('GET')) { $sp54f11a = array(); foreach ($spe36769 as $sp3d006c) { $sp54f11a[$sp3d006c] = \App\System::_get($sp3d006c); } foreach ($sp4d3e4d as $sp3d006c) { $sp54f11a[$sp3d006c] = (int) \App\System::_get($sp3d006c); } return Response::success($sp54f11a); } $_POST['app_url'] = Helper::formatUrl($_POST['app_url']); $_POST['app_url_api'] = Helper::formatUrl($_POST['app_url_api']); $this->set($spceaf29, $spe36769); $this->setInt($spceaf29, $sp4d3e4d); return Response::success(); } function order(Request $spceaf29) { $sp456fda = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($spceaf29->isMethod('GET')) { $sp54f11a = array(); foreach ($sp456fda as $sp3d006c) { $sp54f11a[$sp3d006c] = (int) \App\System::_get($sp3d006c); } return Response::success($sp54f11a); } $this->setInt($spceaf29, $sp456fda); return Response::success(); } function vcode(Request $spceaf29) { $spe36769 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp4d3e4d = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($spceaf29->isMethod('GET')) { $sp54f11a = array(); foreach ($spe36769 as $sp3d006c) { $sp54f11a[$sp3d006c] = \App\System::_get($sp3d006c); } foreach ($sp4d3e4d as $sp3d006c) { $sp54f11a[$sp3d006c] = (int) \App\System::_get($sp3d006c); } return Response::success($sp54f11a); } $this->set($spceaf29, $spe36769); $this->setInt($spceaf29, $sp4d3e4d); return Response::success(); } function email(Request $spceaf29) { $spe36769 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp4d3e4d = array('mail_send_order'); if ($spceaf29->isMethod('GET')) { $sp54f11a = array(); foreach ($spe36769 as $sp3d006c) { $sp54f11a[$sp3d006c] = \App\System::_get($sp3d006c); } foreach ($sp4d3e4d as $sp3d006c) { $sp54f11a[$sp3d006c] = (int) \App\System::_get($sp3d006c); } return Response::success($sp54f11a); } $this->set($spceaf29, $spe36769); $this->setInt($spceaf29, $sp4d3e4d); return Response::success(); } function storage(Request $spceaf29) { $spe36769 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp4d3e4d = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spceaf29->isMethod('GET')) { $sp54f11a = array(); foreach ($spe36769 as $sp3d006c) { $sp54f11a[$sp3d006c] = \App\System::_get($sp3d006c); } foreach ($sp4d3e4d as $sp3d006c) { $sp54f11a[$sp3d006c] = (int) \App\System::_get($sp3d006c); } return Response::success($sp54f11a); } $this->set($spceaf29, $spe36769); $this->set($spceaf29, $sp4d3e4d); return Response::success(); } function emailTest(Request $spceaf29) { $this->validate($spceaf29, array('to' => 'required')); $sp714484 = $spceaf29->post('to'); try { $sp27b5c4 = \Mail::to($sp714484)->send(new \App\Mail\Test()); return Response::success($sp27b5c4); } catch (\Exception $spa0e498) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $spa0e498->getMessage()); return Response::fail($spa0e498->getMessage(), $spa0e498); } } function orderClean(Request $spceaf29) { $this->validate($spceaf29, array('day' => 'required|integer|min:1')); $sp024af9 = (int) $spceaf29->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp024af9))->delete(); return Response::success(); } }