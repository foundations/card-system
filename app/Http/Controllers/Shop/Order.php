<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spceaf29) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp27b5c4 = Geetest\API::verify($spceaf29->post('geetest_challenge'), $spceaf29->post('geetest_validate'), $spceaf29->post('geetest_seccode')); if (!$sp27b5c4) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp4f4bed = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp060035 = $spceaf29->post('type', ''); if ($sp060035 === 'cookie') { $spd7b7cc = Cookie::get('customer'); if (strlen($spd7b7cc) !== 32) { return Response::success(); } $sp4f4bed->where('customer', $spd7b7cc); } elseif ($sp060035 === 'order_no') { $spf13ef6 = $spceaf29->post('order_no', ''); if (strlen($spf13ef6) !== 19) { return Response::success(); } $sp4f4bed->where('order_no', $spf13ef6); } elseif ($sp060035 === 'email') { $sp76c44e = $spceaf29->post('email', ''); if (strlen($sp76c44e) < 6) { return Response::success(); } $sp4f4bed->where('email', $sp76c44e); } else { return Response::fail('请选择查询类型'); } $sp1447fb = $sp4f4bed->with(array('card_orders.card' => function (Relation $sp4f4bed) { $sp4f4bed->select(array('id', 'card')); }))->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $sp6908b3 = ''; return Response::success(array('list' => $sp1447fb, 'msg' => count($sp1447fb) ? $sp6908b3 : '')); } }