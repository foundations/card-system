<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $spceaf29) { $sp8fc58d = (int) $spceaf29->post('category_id'); if (!$sp8fc58d) { return Response::forbidden('请选择商品分类'); } $spb34970 = \App\Category::where('id', $sp8fc58d)->first(); if (!$spb34970) { return Response::forbidden('商品分类未找到'); } if ($spb34970->password_open && $spceaf29->post('password') !== $spb34970->password) { return Response::fail('分类密码输入错误'); } $spc7230d = \App\Product::where('category_id', $sp8fc58d)->where('enabled', 1)->with(array('cards' => function (Relation $sp4f4bed) { $sp4f4bed->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->orderBy('sort')->get(); foreach ($spc7230d as $spafbdfd) { $spafbdfd->setAttribute('count', count($spafbdfd->cards) ? $spafbdfd->cards[0]->count : 0); $spafbdfd->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } return Response::success($spc7230d); } function verifyPassword(Request $spceaf29) { $spd185cc = (int) $spceaf29->post('product_id'); if (!$spd185cc) { return Response::forbidden('请选择商品'); } $spafbdfd = \App\Product::where('id', $spd185cc)->first(); if (!$spafbdfd) { return Response::forbidden('商品未找到'); } if ($spafbdfd->password_open && $spceaf29->post('password') !== $spafbdfd->password) { return Response::fail('商品密码输入错误'); } return Response::success(); } }