<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spe4461d, $speb13d0, $sp0d25eb, $spa5d019 = false) { if (!$spe4461d || !in_array(strtolower($spe4461d->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spe4461d->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp20529e = $spe4461d->store($sp0d25eb, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spa0e498) { \Log::error('File.uploadImg folder:' . $sp0d25eb . ', error:' . $spa0e498->getMessage(), array('exception' => $spa0e498)); if (config('app.debug')) { return Response::fail($spa0e498->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp20529e) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spb504ee = System::_get('storage_driver'); $spadfef0 = Storage::disk($spb504ee)->url($sp20529e); $sp0cd573 = \App\File::insertGetId(array('user_id' => $speb13d0, 'driver' => $spb504ee, 'path' => $sp20529e, 'url' => $spadfef0)); if ($sp0cd573 < 1) { Storage::disk($spb504ee)->delete($sp20529e); return Response::fail('数据库繁忙，请稍后再试'); } $sp27b5c4 = array('id' => $sp0cd573, 'url' => $spadfef0, 'name' => pathinfo($sp20529e, PATHINFO_BASENAME)); if ($spa5d019) { return $sp27b5c4; } return Response::success($sp27b5c4); } function upload_merchant(Request $spceaf29) { $spe2e14a = $this->getUser($spceaf29); if ($spe2e14a === null) { return Response::forbidden('无效的用户'); } $spe4461d = $spceaf29->file('file'); return $this->uploadImg($spe4461d, $spe2e14a->id, \App\File::getProductFolder()); } public function renderImage(Request $spceaf29, $spac6aa4) { if (str_contains($spac6aa4, '..') || str_contains($spac6aa4, './') || str_contains($spac6aa4, '.\\') || !starts_with($spac6aa4, 'images/')) { $spc6aadb = file_get_contents(public_path('images/illegal.jpg')); } else { $spac6aa4 = str_replace('\\', '/', $spac6aa4); $spe4461d = \App\File::wherePath($spac6aa4)->first(); if ($spe4461d) { $spb504ee = $spe4461d->driver; } else { $spb504ee = System::_get('storage_driver'); } if (!in_array($spb504ee, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spc6aadb = Storage::disk($spb504ee)->get($spac6aa4); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spa0e498) { \Log::error('File.renderImage error: ' . $spa0e498->getMessage(), array('exception' => $spa0e498)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($spac6aa4)); die($spc6aadb); } function renderQRCode(Request $spceaf29, $sp0cd573) { $spe4461d = \App\File::find($sp0cd573); if ($spe4461d == null || !$this->isAdmin() && $spe4461d->user_id !== Auth::id()) { return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } return response()->redirectTo($spe4461d->url); } }