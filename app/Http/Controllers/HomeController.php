<?php
namespace App\Http\Controllers; use App\Category; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spe2e14a, $spb34970 = null, $spafbdfd = null) { $sp54f11a = array('url' => config('app.url'), 'company' => System::_get('company'), 'name' => config('app.name'), 'logo' => System::_get('logo')); $sp54f11a['shop'] = array('qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'bkg' => System::_get('shop_bkg'), 'inventory' => System::_getInt('shop_inventory')); if ($spafbdfd) { $sp54f11a['categories'] = array($spb34970); $sp54f11a['product'] = $spafbdfd; $sp3d006c = $spafbdfd->name . ' - ' . $sp54f11a['name']; $sp5a8230 = array(); preg_match_all('/"insert":"(.+?)"/', $spafbdfd->description, $sp5a8230); $sp94864a = str_replace('\\n', ' ', @join(' ', $sp5a8230[1])); } elseif ($spb34970) { $sp54f11a['categories'] = array($spb34970); $sp54f11a['product'] = null; $sp3d006c = $spb34970->name . ' - ' . $sp54f11a['name']; $sp94864a = $spb34970->name; } else { $sp57135c = Category::where('user_id', $spe2e14a->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp57135c as $spb34970) { $spb34970->setVisible(array('id', 'name', 'password_open')); } $sp54f11a['categories'] = $sp57135c; $sp3d006c = $sp54f11a['name']; $sp94864a = $sp54f11a['shop']['ann']; } $sp54f11a['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp54f11a['vcode']['driver'] === 'geetest') { $sp54f11a['vcode']['geetest'] = Geetest\API::get(); } $sp54f11a['pays'] = Pay::whereRaw('enabled&' . (self::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $spd7b7cc = Cookie::get('customer'); $sp57b59a = Cookie::make('customer', strlen($spd7b7cc) !== 32 ? md5(str_random(16)) : $spd7b7cc, 43200); $sp1c015e = $spe2e14a->shop_template ? $spe2e14a->shop_template->id : 0; return response()->view('shop_template.' . $sp1c015e . '.index', array('name' => $sp3d006c, 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp3d006c), 'description' => $sp94864a, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp54f11a))->cookie($sp57b59a); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/#/record">查询订单</a>')); } public function shop_user($sp3d3d9f) { $this->checkIsInMaintain(); $spe2e14a = User::find(\App\UserDomain::id_decode($sp3d3d9f)); if (!$spe2e14a) { $spe2e14a = User::where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->find($sp3d3d9f); } if (!$spe2e14a) { return $this->_shop_404(); } return $this->_shop_render($spe2e14a); } public function shop_category($sp6445ba) { $this->checkIsInMaintain(); $spb34970 = Category::whereId(\App\Category::id_decode($sp6445ba))->with('user')->first(); if (!$spb34970) { $spb34970 = Category::whereId($sp6445ba)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$spb34970) { return $this->_shop_404(); } $spb34970->setVisible(array('id', 'name', 'password_open')); return $this->_shop_render($spb34970->user, $spb34970); } public function shop_product(Request $spceaf29, $spf9af3f) { $this->checkIsInMaintain(); $spafbdfd = Product::whereId(\App\Product::id_decode($spf9af3f))->with(array('user', 'category', 'cards' => function (Relation $sp4f4bed) { $sp4f4bed->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); if (!$spafbdfd) { $spafbdfd = Product::whereId($spf9af3f)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category', 'cards' => function (Relation $sp4f4bed) { $sp4f4bed->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); } if (!$spafbdfd || !$spafbdfd->category) { return $this->_shop_404(); } if ($spafbdfd->password_open && $spafbdfd->password !== $spceaf29->input('p')) { return view('message', array('title' => '出错', 'message' => ($spceaf29->has('p') ? '密码错误' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } $spafbdfd->category->setVisible(array('id', 'name', 'password_open')); $spafbdfd->setAttribute('count', count($spafbdfd->cards) ? $spafbdfd->cards[0]->count : 0); $spafbdfd->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); return $this->_shop_render($spafbdfd->user, $spafbdfd->category, $spafbdfd); } public function shop() { $this->checkIsInMaintain(); $spe2e14a = User::firstOrFail(); return $this->_shop_render($spe2e14a); } public function admin() { $sp54f11a = array(); $sp54f11a['url'] = config('app.url'); $sp54f11a['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => System::_get('vcode_login')); if ($sp54f11a['vcode']['driver'] === 'geetest') { $sp54f11a['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp54f11a)); } }