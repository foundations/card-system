<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { public static function orderSuccess($spc73e3b, callable $sp452106) { $speb13d0 = $spc73e3b->user_id; $sp2c2518 = $spc73e3b->income; try { return DB::transaction(function () use($spc73e3b, $speb13d0, $sp2c2518, $sp452106) { if ($sp452106() === Order::STATUS_SUCCESS) { $spe2e14a = User::where('id', $speb13d0)->lockForUpdate()->firstOrFail(); $spe2e14a->m_all += $sp2c2518; $spe2e14a->saveOrFail(); $sp44ee9b = new FundRecord(); $sp44ee9b->user_id = $speb13d0; $sp44ee9b->type = FundRecord::TYPE_IN; $sp44ee9b->amount = $sp2c2518; $sp44ee9b->balance = $spe2e14a->m_balance; $sp44ee9b->remark = '订单#' . $spc73e3b->order_no; $sp44ee9b->order_id = $spc73e3b->id; $sp44ee9b->saveOrFail(); } return true; }); } catch (\Throwable $spa0e498) { $spfb4ab0 = 'FundHelper.orderSuccess error, user_id:' . $speb13d0 . ',amount:' . $sp2c2518 . ',order_no:' . $spc73e3b->order_no; \Illuminate\Support\Facades\Log::error($spfb4ab0 . ' with exception:', array('Exception' => $spa0e498)); return false; } } public static function orderFreeze($spc73e3b, $sp090ba2) { if ($spc73e3b->status === Order::STATUS_FROZEN || $spc73e3b->status === Order::STATUS_REFUND) { return true; } $speb13d0 = $spc73e3b->user_id; try { return DB::transaction(function () use($spc73e3b, $speb13d0, $sp090ba2) { $spc73e3b->status = \App\Order::STATUS_FROZEN; $spc73e3b->frozen_reason = $sp090ba2; $spc73e3b->saveOrFail(); $spe2e14a = User::where('id', $speb13d0)->lockForUpdate()->firstOrFail(); if ($spc73e3b->cards()->exists()) { $spe2e14a->m_frozen += $spc73e3b->income; $spe2e14a->saveOrFail(); $sp44ee9b = new FundRecord(); $sp44ee9b->user_id = $speb13d0; $sp44ee9b->type = FundRecord::TYPE_OUT; $sp44ee9b->amount = -$spc73e3b->income; $sp44ee9b->balance = $spe2e14a->m_balance; $sp44ee9b->remark = $sp090ba2 . ', 冻结订单#' . $spc73e3b->order_no; $sp44ee9b->order_id = $spc73e3b->id; $sp44ee9b->saveOrFail(); } else { if ($spc73e3b->paid_at === NULL) { $sp9e8b8b = '未付款'; } else { $sp9e8b8b = '未发货'; } $sp44ee9b = new FundRecord(); $sp44ee9b->user_id = $speb13d0; $sp44ee9b->type = FundRecord::TYPE_OUT; $sp44ee9b->amount = 0; $sp44ee9b->balance = $spe2e14a->m_balance; $sp44ee9b->remark = $sp090ba2 . ', 冻结订单(' . $sp9e8b8b . ')#' . $spc73e3b->order_no; $sp44ee9b->order_id = $spc73e3b->id; $sp44ee9b->saveOrFail(); } return true; }); } catch (\Throwable $spa0e498) { $spfb4ab0 = 'FundHelper.orderFreeze error, user_id:' . $speb13d0 . ',amount:' . $spc73e3b->income; if ($spc73e3b) { $spfb4ab0 .= ',order_no:' . $spc73e3b->order_no; } else { $spfb4ab0 .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($spfb4ab0 . ' with exception:', array('Exception' => $spa0e498)); return false; } } public static function orderUnfreeze($spc73e3b, $sp28c44e, callable $spea1515 = null, &$spa3e8bf = null) { $speb13d0 = $spc73e3b->user_id; try { return DB::transaction(function () use($spc73e3b, $speb13d0, $sp28c44e, $spea1515, &$spa3e8bf) { if ($spea1515 !== null && $spea1515() === false) { return false; } if ($spc73e3b->status !== Order::STATUS_FROZEN) { $spa3e8bf = $spc73e3b->status; return true; } $spe2e14a = User::where('id', $speb13d0)->lockForUpdate()->firstOrFail(); if ($spc73e3b->cards()->exists()) { $spc73e3b->status = \App\Order::STATUS_SUCCESS; $spe2e14a->m_frozen -= $spc73e3b->income; $spe2e14a->saveOrFail(); $sp44ee9b = new FundRecord(); $sp44ee9b->user_id = $speb13d0; $sp44ee9b->type = FundRecord::TYPE_IN; $sp44ee9b->amount = $spc73e3b->income; $sp44ee9b->balance = $spe2e14a->m_balance; $sp44ee9b->remark = $sp28c44e . ', 解冻订单#' . $spc73e3b->order_no; $sp44ee9b->order_id = $spc73e3b->id; $sp44ee9b->saveOrFail(); } else { if ($spc73e3b->paid_at === NULL) { $spc73e3b->status = \App\Order::STATUS_UNPAY; $sp9e8b8b = '未付款'; } else { $spc73e3b->status = \App\Order::STATUS_PAID; $sp9e8b8b = '未发货'; } $sp44ee9b = new FundRecord(); $sp44ee9b->user_id = $speb13d0; $sp44ee9b->type = FundRecord::TYPE_IN; $sp44ee9b->amount = 0; $sp44ee9b->balance = $spe2e14a->m_balance; $sp44ee9b->remark = $sp28c44e . ', 解冻订单(' . $sp9e8b8b . ')#' . $spc73e3b->order_no; $sp44ee9b->order_id = $spc73e3b->id; $sp44ee9b->saveOrFail(); } $spa3e8bf = $spc73e3b->status; $spc73e3b->saveOrFail(); return true; }); } catch (\Throwable $spa0e498) { $spfb4ab0 = 'FundHelper.orderUnfreeze error, user_id:' . $speb13d0 . ',amount:' . $spc73e3b->income; if ($spc73e3b) { $spfb4ab0 .= ',order_no:' . $spc73e3b->order_no; } else { $spfb4ab0 .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($spfb4ab0 . ' with exception:', array('Exception' => $spa0e498)); return false; } } }