<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp5b4958) { if ('' == $sp5b4958) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp5b4958; } public function get($sp76360a, $sp06df85, $sp636f0e = array()) { return $this->parseResponse(Http::get($this->url($sp76360a, $sp06df85), $this->buildRequestParams($sp76360a, $sp636f0e))); } public function post($sp76360a, $sp06df85, $sp636f0e = array(), $sp72cb1c = array()) { return $this->parseResponse(Http::post($this->url($sp76360a, $sp06df85), $this->buildRequestParams($sp76360a, $sp636f0e), $sp72cb1c)); } public function url($sp76360a, $sp06df85) { $sp2bbe92 = explode('.', $sp76360a); $sp76360a = '/' . $sp06df85 . '/' . $sp2bbe92[count($sp2bbe92) - 1]; array_pop($sp2bbe92); $sp76360a = implode('.', $sp2bbe92) . $sp76360a; $spadfef0 = self::$requestUrl . $sp76360a; return $spadfef0; } private function parseResponse($spd68d19) { $sp2bb3bd = json_decode($spd68d19, true); if (null === $sp2bb3bd) { throw new Exception('response invalid, data: ' . $spd68d19); } return $sp2bb3bd; } private function buildRequestParams($sp76360a, $sp6a8129) { if (!is_array($sp6a8129)) { $sp6a8129 = array(); } $spd029da = $this->getCommonParams($this->accessToken, $sp76360a); foreach ($sp6a8129 as $spc20e8d => $spc86f28) { if (isset($spd029da[$spc20e8d])) { throw new Exception('参数名冲突'); } $spd029da[$spc20e8d] = $spc86f28; } return $spd029da; } private function getCommonParams($sp5b4958, $sp76360a) { $sp636f0e = array(); $sp636f0e[Protocol::TOKEN_KEY] = $sp5b4958; $sp636f0e[Protocol::METHOD_KEY] = $sp76360a; return $sp636f0e; } }