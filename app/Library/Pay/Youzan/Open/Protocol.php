<?php
namespace App\Library\Pay\Youzan\Open; class Protocol { const SIGN_KEY = 'sign'; const VERSION_KEY = 'v'; const APP_ID_KEY = 'app_id'; const METHOD_KEY = 'method'; const FORMAT_KEY = 'format'; const TOKEN_KEY = 'access_token'; const TIMESTAMP_KEY = 'timestamp'; const SIGN_METHOD_KEY = 'sign_method'; const ALLOWED_DEVIATE_SECONDS = 600; const ERR_SYSTEM = -1; const ERR_INVALID_APP_ID = 40001; const ERR_INVALID_APP = 40002; const ERR_INVALID_TIMESTAMP = 40003; const ERR_EMPTY_SIGNATURE = 40004; const ERR_INVALID_SIGNATURE = 40005; const ERR_INVALID_METHOD_NAME = 40006; const ERR_INVALID_METHOD = 40007; const ERR_INVALID_TEAM = 40008; const ERR_PARAMETER = 41000; const ERR_LOGIC = 50000; public static function sign($sp2b489e, $sp636f0e, $sp76360a = 'md5') { if (!is_array($sp636f0e)) { $sp636f0e = array(); } ksort($sp636f0e); $speaf35f = ''; foreach ($sp636f0e as $spc20e8d => $spc86f28) { $speaf35f .= $spc20e8d . $spc86f28; } return self::hash($sp76360a, $sp2b489e . $speaf35f . $sp2b489e); } private static function hash($sp76360a, $speaf35f) { switch ($sp76360a) { case 'md5': default: $spf9f124 = md5($speaf35f); break; } return $spf9f124; } public static function allowedSignMethods() { return array('md5'); } public static function allowedFormat() { return array('json'); } }