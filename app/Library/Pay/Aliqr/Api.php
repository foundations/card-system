<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($sp7a2170) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp7a2170; } private function defineConfig(&$sp54f11a) { $sp54f11a['sign_type'] = 'RSA2'; $sp54f11a['charset'] = 'UTF-8'; $sp54f11a['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $sp54f11a['MaxQueryRetry'] = '10'; $sp54f11a['QueryDuration'] = '3'; $sp54f11a['notify_url'] = $this->url_notify; } function goPay($sp54f11a, $spd2bbfa, $sp942f8c, $spd86457, $sp5f71a2) { $sp488d84 = sprintf('%.2f', $sp5f71a2 / 100); $this->defineConfig($sp54f11a); $sp89a043 = '5m'; $sp60011f = new \GoodsDetail(); $sp60011f->setGoodsId('card'); $sp60011f->setGoodsName($sp942f8c); $sp60011f->setPrice($sp488d84); $sp60011f->setQuantity(1); $spcd8ad7 = $sp60011f->getGoodsDetail(); $sp54d44e = array($spcd8ad7); $sp460415 = ''; $spebf3ad = new \AlipayTradePrecreateContentBuilder(); $spebf3ad->setOutTradeNo($spd2bbfa); $spebf3ad->setTotalAmount($sp488d84); $spebf3ad->setTimeExpress($sp89a043); $spebf3ad->setSubject($sp942f8c); $spebf3ad->setBody($spd86457); $spebf3ad->setGoodsDetailList($sp54d44e); $spebf3ad->setAppAuthToken($sp460415); $sp3c17b8 = new \AlipayTradeService($sp54f11a); $sp640ffe = $sp3c17b8->qrPay($spebf3ad); switch ($sp640ffe->getTradeStatus()) { case 'SUCCESS': $sp651d08 = $sp640ffe->getResponse(); header('location: /qrcode/pay/' . $spd2bbfa . '/aliqr?url=' . urlencode($sp651d08->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp640ffe->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp640ffe->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp640ffe->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp640ffe->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp640ffe->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp640ffe->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($sp54f11a, $sp0a40c9) { $sp60916b = isset($sp54f11a['isNotify']) && $sp54f11a['isNotify']; $this->defineConfig($sp54f11a); $spd2bbfa = trim(isset($sp54f11a['out_trade_no']) ? $sp54f11a['out_trade_no'] : $_REQUEST['out_trade_no']); $spcbe601 = new \AlipayTradeQueryContentBuilder(); $spcbe601->setOutTradeNo($spd2bbfa); $sp201b03 = new \AlipayTradeService($sp54f11a); $spa864cf = $sp201b03->queryTradeResult($spcbe601); switch ($spa864cf->getTradeStatus()) { case 'SUCCESS': $sp651d08 = $spa864cf->getResponse(); $spdc4c7a = $sp651d08->trade_no; $sp151a84 = (int) ($sp651d08->receipt_amount * 100); $sp0a40c9($spd2bbfa, $sp151a84, $spdc4c7a); if ($sp60916b) { echo 'success'; } return true; break; case 'FAILED': if ($sp60916b) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($sp60916b) { echo 'failed'; } return false; break; default: if ($sp60916b) { echo 'failed'; } return false; break; } } }