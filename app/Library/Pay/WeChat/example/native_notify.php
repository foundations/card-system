<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $spf26d26 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp10de36 = Log::Init($spf26d26, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($spee50ce, $spd185cc) { $sp63ca0e = new WxPayUnifiedOrder(); $sp63ca0e->SetBody('test'); $sp63ca0e->SetAttach('test'); $sp63ca0e->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $sp63ca0e->SetTotal_fee('1'); $sp63ca0e->SetTime_start(date('YmdHis')); $sp63ca0e->SetTime_expire(date('YmdHis', time() + 600)); $sp63ca0e->SetGoods_tag('test'); $sp63ca0e->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $sp63ca0e->SetTrade_type('NATIVE'); $sp63ca0e->SetOpenid($spee50ce); $sp63ca0e->SetProduct_id($spd185cc); $spfe67da = WxPayApi::unifiedOrder($sp63ca0e); Log::DEBUG('unifiedorder:' . json_encode($spfe67da)); return $spfe67da; } public function NotifyProcess($sp2bb3bd, &$spfb4ab0) { Log::DEBUG('call back:' . json_encode($sp2bb3bd)); if (!array_key_exists('openid', $sp2bb3bd) || !array_key_exists('product_id', $sp2bb3bd)) { $spfb4ab0 = '回调数据异常'; return false; } $sp2cc24e = $sp2bb3bd['openid']; $spd185cc = $sp2bb3bd['product_id']; $spfe67da = $this->unifiedorder($sp2cc24e, $spd185cc); if (!array_key_exists('appid', $spfe67da) || !array_key_exists('mch_id', $spfe67da) || !array_key_exists('prepay_id', $spfe67da)) { $spfb4ab0 = '统一下单失败'; return false; } $this->SetData('appid', $spfe67da['appid']); $this->SetData('mch_id', $spfe67da['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $spfe67da['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $sp58471a = new NativeNotifyCallBack(); $sp58471a->Handle(true);