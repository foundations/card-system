<?php
require_once 'WxPay.Exception.php'; require_once 'WxPay.Config.php'; require_once 'WxPay.Data.php'; class WxPayApi { public static function unifiedOrder($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/pay/unifiedorder'; if (!$sp7b667a->IsOut_trade_noSet()) { throw new WxPayException('缺少统一支付接口必填参数out_trade_no！'); } else { if (!$sp7b667a->IsBodySet()) { throw new WxPayException('缺少统一支付接口必填参数body！'); } else { if (!$sp7b667a->IsTotal_feeSet()) { throw new WxPayException('缺少统一支付接口必填参数total_fee！'); } else { if (!$sp7b667a->IsTrade_typeSet()) { throw new WxPayException('缺少统一支付接口必填参数trade_type！'); } } } } if ($sp7b667a->GetTrade_type() == 'JSAPI' && !$sp7b667a->IsOpenidSet()) { throw new WxPayException('统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！'); } if ($sp7b667a->GetTrade_type() == 'NATIVE' && !$sp7b667a->IsProduct_idSet()) { throw new WxPayException('统一支付接口中，缺少必填参数product_id！trade_type为JSAPI时，product_id为必填参数！'); } if (!$sp7b667a->IsNotify_urlSet()) { $sp7b667a->SetNotify_url(WxPayConfig::NOTIFY_URL); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function orderQuery($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/pay/orderquery'; if (!$sp7b667a->IsOut_trade_noSet() && !$sp7b667a->IsTransaction_idSet()) { throw new WxPayException('订单查询接口中，out_trade_no、transaction_id至少填一个！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function closeOrder($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/pay/closeorder'; if (!$sp7b667a->IsOut_trade_noSet()) { throw new WxPayException('订单查询接口中，out_trade_no必填！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function refund($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/secapi/pay/refund'; if (!$sp7b667a->IsOut_trade_noSet() && !$sp7b667a->IsTransaction_idSet()) { throw new WxPayException('退款申请接口中，out_trade_no、transaction_id至少填一个！'); } else { if (!$sp7b667a->IsOut_refund_noSet()) { throw new WxPayException('退款申请接口中，缺少必填参数out_refund_no！'); } else { if (!$sp7b667a->IsTotal_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数total_fee！'); } else { if (!$sp7b667a->IsRefund_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数refund_fee！'); } else { if (!$sp7b667a->IsOp_user_idSet()) { throw new WxPayException('退款申请接口中，缺少必填参数op_user_id！'); } } } } } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, true, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function refundQuery($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/pay/refundquery'; if (!$sp7b667a->IsOut_refund_noSet() && !$sp7b667a->IsOut_trade_noSet() && !$sp7b667a->IsTransaction_idSet() && !$sp7b667a->IsRefund_idSet()) { throw new WxPayException('退款查询接口中，out_refund_no、out_trade_no、transaction_id、refund_id四个参数必填一个！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function downloadBill($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/pay/downloadbill'; if (!$sp7b667a->IsBill_dateSet()) { throw new WxPayException('对账单接口中，缺少必填参数bill_date！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); if (substr($sp651d08, 0, 5) == '<xml>') { return ''; } return $sp651d08; } public static function micropay($sp7b667a, $sp6cf33d = 10) { $spadfef0 = 'https://api.mch.weixin.qq.com/pay/micropay'; if (!$sp7b667a->IsBodySet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数body！'); } else { if (!$sp7b667a->IsOut_trade_noSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数out_trade_no！'); } else { if (!$sp7b667a->IsTotal_feeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数total_fee！'); } else { if (!$sp7b667a->IsAuth_codeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数auth_code！'); } } } } $sp7b667a->SetSpbill_create_ip($_SERVER['REMOTE_ADDR']); $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function reverse($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/secapi/pay/reverse'; if (!$sp7b667a->IsOut_trade_noSet() && !$sp7b667a->IsTransaction_idSet()) { throw new WxPayException('撤销订单API接口中，参数out_trade_no和transaction_id必须填写一个！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, true, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function report($sp7b667a, $sp6cf33d = 1) { $spadfef0 = 'https://api.mch.weixin.qq.com/payitil/report'; if (!$sp7b667a->IsInterface_urlSet()) { throw new WxPayException('接口URL，缺少必填参数interface_url！'); } if (!$sp7b667a->IsReturn_codeSet()) { throw new WxPayException('返回状态码，缺少必填参数return_code！'); } if (!$sp7b667a->IsResult_codeSet()) { throw new WxPayException('业务结果，缺少必填参数result_code！'); } if (!$sp7b667a->IsUser_ipSet()) { throw new WxPayException('访问接口IP，缺少必填参数user_ip！'); } if (!$sp7b667a->IsExecute_time_Set()) { throw new WxPayException('接口耗时，缺少必填参数execute_time_！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetUser_ip($_SERVER['REMOTE_ADDR']); $sp7b667a->SetTime(date('YmdHis')); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); return $sp651d08; } public static function bizpayurl($sp7b667a, $sp6cf33d = 6) { if (!$sp7b667a->IsProduct_idSet()) { throw new WxPayException('生成二维码，缺少必填参数product_id！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetTime_stamp(time()); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); return $sp7b667a->GetValues(); } public static function shorturl($sp7b667a, $sp6cf33d = 6) { $spadfef0 = 'https://api.mch.weixin.qq.com/tools/shorturl'; if (!$sp7b667a->IsLong_urlSet()) { throw new WxPayException('需要转换的URL，签名用原串，传输需URL encode！'); } $sp7b667a->SetAppid(WxPayConfig::APPID); $sp7b667a->SetMch_id(WxPayConfig::MCHID); $sp7b667a->SetNonce_str(self::getNonceStr()); $sp7b667a->SetSign(); $spf87232 = $sp7b667a->ToXml(); $sp2fa79f = self::getMillisecond(); $sp651d08 = self::postXmlCurl($spf87232, $spadfef0, false, $sp6cf33d); $spfe67da = WxPayResults::Init($sp651d08); self::reportCostTime($spadfef0, $sp2fa79f, $spfe67da); return $spfe67da; } public static function notify($sp2b4e7b, &$spfb4ab0) { $spf87232 = file_get_contents('php://input'); try { $spfe67da = WxPayResults::Init($spf87232); } catch (WxPayException $spa0e498) { $spfb4ab0 = $spa0e498->errorMessage(); return false; } return call_user_func($sp2b4e7b, $spfe67da); } public static function getNonceStr($spf9d313 = 32) { $sp7e0f35 = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spba2cdb = ''; for ($sp3f53b5 = 0; $sp3f53b5 < $spf9d313; $sp3f53b5++) { $spba2cdb .= substr($sp7e0f35, mt_rand(0, strlen($sp7e0f35) - 1), 1); } return $spba2cdb; } public static function replyNotify($spf87232) { echo $spf87232; } private static function reportCostTime($spadfef0, $sp2fa79f, $sp2bb3bd) { if (WxPayConfig::REPORT_LEVENL == 0) { return; } if (WxPayConfig::REPORT_LEVENL == 1 && array_key_exists('return_code', $sp2bb3bd) && $sp2bb3bd['return_code'] == 'SUCCESS' && array_key_exists('result_code', $sp2bb3bd) && $sp2bb3bd['result_code'] == 'SUCCESS') { return; } $sp8a89f9 = self::getMillisecond(); $spf65d57 = new WxPayReport(); $spf65d57->SetInterface_url($spadfef0); $spf65d57->SetExecute_time_($sp8a89f9 - $sp2fa79f); if (array_key_exists('return_code', $sp2bb3bd)) { $spf65d57->SetReturn_code($sp2bb3bd['return_code']); } if (array_key_exists('return_msg', $sp2bb3bd)) { $spf65d57->SetReturn_msg($sp2bb3bd['return_msg']); } if (array_key_exists('result_code', $sp2bb3bd)) { $spf65d57->SetResult_code($sp2bb3bd['result_code']); } if (array_key_exists('err_code', $sp2bb3bd)) { $spf65d57->SetErr_code($sp2bb3bd['err_code']); } if (array_key_exists('err_code_des', $sp2bb3bd)) { $spf65d57->SetErr_code_des($sp2bb3bd['err_code_des']); } if (array_key_exists('out_trade_no', $sp2bb3bd)) { $spf65d57->SetOut_trade_no($sp2bb3bd['out_trade_no']); } if (array_key_exists('device_info', $sp2bb3bd)) { $spf65d57->SetDevice_info($sp2bb3bd['device_info']); } try { self::report($spf65d57); } catch (WxPayException $spa0e498) { } } private static function postXmlCurl($spf87232, $spadfef0, $sp1a20e8 = false, $sp86d368 = 30) { $spe77a27 = curl_init(); curl_setopt($spe77a27, CURLOPT_TIMEOUT, $sp86d368); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($spe77a27, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($spe77a27, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } curl_setopt($spe77a27, CURLOPT_URL, $spadfef0); curl_setopt($spe77a27, CURLOPT_SSL_VERIFYPEER, TRUE); curl_setopt($spe77a27, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($spe77a27, CURLOPT_HEADER, FALSE); curl_setopt($spe77a27, CURLOPT_RETURNTRANSFER, TRUE); if ($sp1a20e8 == true) { curl_setopt($spe77a27, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($spe77a27, CURLOPT_SSLCERT, WxPayConfig::SSLCERT_PATH); curl_setopt($spe77a27, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($spe77a27, CURLOPT_SSLKEY, WxPayConfig::SSLKEY_PATH); } else { curl_setopt($spe77a27, CURLOPT_SSL_VERIFYPEER, false); } curl_setopt($spe77a27, CURLOPT_POST, TRUE); curl_setopt($spe77a27, CURLOPT_POSTFIELDS, $spf87232); $sp2bb3bd = curl_exec($spe77a27); if ($sp2bb3bd) { curl_close($spe77a27); return $sp2bb3bd; } else { $sp7b3cc2 = curl_errno($spe77a27); \Log::error('WxPat.Api.postXmlCurl Error: ' . curl_error($spe77a27)); curl_close($spe77a27); throw new WxPayException("curl出错，错误码: {$sp7b3cc2}"); } } private static function getMillisecond() { $sp6547f3 = explode(' ', microtime()); $sp6547f3 = $sp6547f3[1] . $sp6547f3[0] * 1000; $sp79300f = explode('.', $sp6547f3); $sp6547f3 = $sp79300f[0]; return $sp6547f3; } }