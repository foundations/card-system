<?php
require_once 'qpayMch.config.php'; class QpayMchUtil { public static function createNoncestr($spf9d313 = 32) { $sp7e0f35 = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spba2cdb = ''; for ($sp3f53b5 = 0; $sp3f53b5 < $spf9d313; $sp3f53b5++) { $spba2cdb .= substr($sp7e0f35, mt_rand(0, strlen($sp7e0f35) - 1), 1); } return $spba2cdb; } public static function buildQueryStr($sp636f0e) { $spe5d413 = array(); foreach ($sp636f0e as $spc20e8d => $spc86f28) { if ($spc20e8d != 'sign' && $spc86f28 != '' && !is_array($spc86f28)) { array_push($spe5d413, "{$spc20e8d}={$spc86f28}"); } } return implode('&', $spe5d413); } public static function getSign($sp636f0e, $spf3ba76) { ksort($sp636f0e); $sp8bc0f2 = QpayMchUtil::buildQueryStr($sp636f0e); $sp8bc0f2 = $sp8bc0f2 . '&key=' . $spf3ba76; $sp8bc0f2 = md5($sp8bc0f2); $spc768dc = strtoupper($sp8bc0f2); return $spc768dc; } public static function arrayToXml($sp169f27) { $spf87232 = '<xml>'; foreach ($sp169f27 as $spc95936 => $spfa4469) { if (is_numeric($spfa4469)) { $spf87232 .= "<{$spc95936}>{$spfa4469}</{$spc95936}>"; } else { $spf87232 .= "<{$spc95936}><![CDATA[{$spfa4469}]]></{$spc95936}>"; } } $spf87232 .= '</xml>'; return $spf87232; } public static function xmlToArray($spf87232) { $sp169f27 = json_decode(json_encode(simplexml_load_string($spf87232, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $sp169f27; } public static function reqByCurlNormalPost($sp636f0e, $spadfef0, $spa2890a = 10) { return QpayMchUtil::_reqByCurl($sp636f0e, $spadfef0, $spa2890a, false); } public static function reqByCurlSSLPost($sp636f0e, $spadfef0, $spa2890a = 10) { return QpayMchUtil::_reqByCurl($sp636f0e, $spadfef0, $spa2890a, true); } private static function _reqByCurl($sp636f0e, $spadfef0, $spa2890a = 10, $sp2425b6 = false) { $spe77a27 = curl_init(); curl_setopt($spe77a27, CURLOPT_URL, $spadfef0); curl_setopt($spe77a27, CURLOPT_TIMEOUT, $spa2890a); curl_setopt($spe77a27, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($spe77a27, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($spe77a27, CURLOPT_HEADER, FALSE); curl_setopt($spe77a27, CURLOPT_RETURNTRANSFER, TRUE); if (isset($sp2425b6) && $sp2425b6 != false) { curl_setopt($spe77a27, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($spe77a27, CURLOPT_SSLCERT, QpayMchConf::CERT_FILE_PATH); curl_setopt($spe77a27, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($spe77a27, CURLOPT_SSLKEY, QpayMchConf::KEY_FILE_PATH); } curl_setopt($spe77a27, CURLOPT_POST, true); curl_setopt($spe77a27, CURLOPT_POSTFIELDS, $sp636f0e); $sp27b5c4 = curl_exec($spe77a27); if ($sp27b5c4) { curl_close($spe77a27); return $sp27b5c4; } else { $sp7b3cc2 = curl_errno($spe77a27); print_r($sp7b3cc2); curl_close($spe77a27); return false; } } }