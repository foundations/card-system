<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $sp636f0e = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $spfe67da = HttpClient::quickPost(yeke_API_GATE, $sp636f0e); return $spfe67da; } public static function getPayType() { $sp1447fb = json_decode(self::getPayGate(), true); $sp2bb3bd = array(); if ($sp1447fb['status']) { foreach ($sp1447fb['list'] as $spc95936 => $spfa4469) { $sp2bb3bd[] = array('paytype' => $spfa4469['paytype'], 'channelname' => $spfa4469['channelname']); } } return $sp2bb3bd; } public static function getChannel($spb39012) { $sp1447fb = json_decode(self::getPayGate(), true); $sp2bb3bd = array(); if ($spb39012 == 'card') { if ($sp1447fb['status'] && $sp1447fb['list']) { foreach ($sp1447fb['list'] as $spfa4469) { if ($spfa4469['paytype'] == $spb39012) { foreach ($spfa4469['datalist'] as $spc95936 => $sp1188fa) { $sp2bb3bd[] = array('channelid' => $sp1188fa['channelid'], 'channelname' => $sp1188fa['channelname'], 'imgurl' => $sp1188fa['imgurl']); } } } } } else { if ($sp1447fb['status'] && $sp1447fb['list']) { foreach ($sp1447fb['list'] as $spfa4469) { if ($spfa4469['paytype'] == $spb39012) { foreach ($spfa4469['datalist'] as $spc95936 => $sp1188fa) { $sp2bb3bd[] = array('bankcode' => $sp1188fa['bankcode'], 'bankname' => $sp1188fa['bankname'], 'imgurl' => $sp1188fa['imgurl']); } } } } } return $sp2bb3bd; } public static function getCardValue() { $sp1447fb = json_decode(self::getPayGate(), true); $sp2bb3bd = array(); if ($sp1447fb['status'] && $sp1447fb['list']) { foreach ($sp1447fb['list'] as $spfa4469) { if ($spfa4469['paytype'] == 'card') { foreach ($spfa4469['datalist'] as $spc95936 => $spfa4469) { $sp2bb3bd[] = array('channelid' => $spfa4469['channelid'], 'channelname' => $spfa4469['channelname'], 'cardvalue' => $spfa4469['cardvalue'], 'cardlength' => $spfa4469['cardlength']); } } } } return $sp2bb3bd; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($sp636f0e) { $sp636f0e = array_merge(array('P_userid' => yeke_USER_ID), $sp636f0e); $spc768dc = $this->makeSign($sp636f0e); $sp636f0e = array_merge($sp636f0e, array('P_sign' => $spc768dc, 'action' => 'payGate')); switch ($sp636f0e['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($sp636f0e); break; case 'card': return $this->payGateCard($sp636f0e); break; default: return 'error,支付方式错误'; } } public function payGateBank($sp636f0e) { $spba2cdb = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $spba2cdb .= '<body onload="document.pay.submit()">'; $spba2cdb .= '请稍候，正在跳转...'; $spba2cdb .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($sp636f0e as $spc95936 => $spfa4469) { $spba2cdb .= '<input type="hidden" name="' . $spc95936 . '" value="' . $spfa4469 . '">'; } $spba2cdb .= '</body></html>'; return $spba2cdb; } public function payGateCard($sp636f0e) { if ($sp636f0e['P_cardnum'] == '' || $sp636f0e['P_cardpwd'] == '' || $sp636f0e['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $spfe67da = HttpClient::quickPost(yeke_API_GATE, $sp636f0e); return $spfe67da; } public function makeSign($sp636f0e) { $spba2cdb = ''; foreach ($sp636f0e as $spc95936 => $spfa4469) { $spba2cdb .= $spba2cdb ? '&' : ''; $spba2cdb .= $spc95936 . '=' . $spfa4469; } $spc768dc = md5($spba2cdb . yeke_USER_KEY); return $spc768dc; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $spfb24f9 = $_POST['P_sign']; foreach ($_POST as $spc95936 => $spfa4469) { if ($spc95936 == 'P_sign') { unset($_POST['P_sign']); } } $sp2436de = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $spfb24f9 . '=' . $sp2436de); if ($spfb24f9 == $sp2436de) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $spfb24f9 = $_GET['P_sign']; foreach ($_GET as $spc95936 => $spfa4469) { if ($spc95936 == 'P_sign') { unset($_GET['P_sign']); } } $sp2436de = $this->makeSign($_GET); if ($spfb24f9 == $sp2436de) { return true; } else { return false; } } public function logs($spda8ca1, $sp636f0e, $sp2436de) { date_default_timezone_set('PRC'); if (!empty($sp636f0e)) { $spba2cdb = ''; foreach ($sp636f0e as $spc95936 => $spfa4469) { $spba2cdb .= $spba2cdb ? '&' : ''; $spba2cdb .= $spc95936 . '=' . $spfa4469; } $spb0c78a = date('Y-m-d H:i:s') . '
' . $spda8ca1 . '
' . $spba2cdb . '
' . $sp2436de . '

........................................

'; $spe7f4d2 = 'log'; if (!file_exists($spe7f4d2)) { mkdir($spe7f4d2, 511, true); } $spc4ce88 = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp7e03f4 = fopen($spe7f4d2 . '/' . $spc4ce88, 'ab'); fwrite($sp7e03f4, $spb0c78a); fclose($sp7e03f4); } } }