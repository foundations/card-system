<?php
namespace App\Library\Pay\Aliwap; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($sp7a2170) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp7a2170; $this->url_return = SYS_URL . '/pay/return/' . $sp7a2170; $this->pay_id = $sp7a2170; } function goPay($sp54f11a, $spd2bbfa, $sp942f8c, $spd86457, $sp5f71a2) { $sp488d84 = sprintf('%.2f', $sp5f71a2 / 100); $spa44e81 = $this->buildAliConfig($sp54f11a); require_once __DIR__ . '/lib/alipay_submit.class.php'; $sp226eb2 = $this->url_notify . '/buy/'; $spa44e81['notify_url'] = $this->url_notify; $spa44e81['return_url'] = $this->url_return . '/' . $spd2bbfa; $spd1ec13 = array('service' => $spa44e81['service'], 'partner' => $spa44e81['partner'], 'seller_id' => $spa44e81['seller_id'], 'payment_type' => $spa44e81['payment_type'], 'notify_url' => $spa44e81['notify_url'], 'return_url' => $spa44e81['return_url'], 'out_trade_no' => $spd2bbfa, 'total_fee' => $sp488d84, 'subject' => $sp942f8c, 'body' => $spd86457, 'show_url' => $sp226eb2, 'app_pay' => 'Y', '_input_charset' => 'utf-8'); $sp68d4b7 = new \AlipaySubmit($spa44e81); $sp559fc8 = $sp68d4b7->buildRequestForm($spd1ec13, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $sp559fc8; } function verify($sp54f11a, $sp0a40c9) { $sp60916b = isset($sp54f11a['isNotify']) && $sp54f11a['isNotify']; $spa44e81 = $this->buildAliConfig($sp54f11a); require __DIR__ . '/lib/alipay_notify.class.php'; $sp38b9d7 = new \AlipayNotify($spa44e81); if ($sp60916b) { $spfe67da = $sp38b9d7->verifyNotify(); } else { $spfe67da = $sp38b9d7->verifyReturn(); } if ($spfe67da) { $spd2bbfa = $_REQUEST['out_trade_no']; $spdc4c7a = $_REQUEST['trade_no']; $sp370d5b = $_REQUEST['trade_status']; $sp151a84 = (int) ($_REQUEST['total_fee'] * 100); if ($sp370d5b == 'TRADE_FINISHED' || $sp370d5b == 'TRADE_SUCCESS') { $sp0a40c9($spd2bbfa, $sp151a84, $spdc4c7a); } if ($sp60916b) { echo 'success'; } return true; } else { if ($sp60916b) { echo 'fail'; $spcabe3e = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $spcabe3e = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($spcabe3e . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($sp54f11a) { return array('partner' => $sp54f11a['partner'], 'seller_id' => $sp54f11a['partner'], 'key' => $sp54f11a['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => 'alipay.wap.create.direct.pay.by.user'); } }